<?xml version="1.0" encoding="UTF-8" ?>
<schema name="MLGB" version="1.1">
  <types>
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="date" class="solr.DateField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      </analyzer>
    </fieldType>
  <fieldType name="string_ws" class="solr.StrField" positionIncrementGap="100">
      <analyzer type="index">
        <!--<tokenizer class="solr.PatternTokenizerFactory" pattern=". /()-" />
    
    <tokenizer class="org.apache.lucene.analysis.standard.StandardTokenizer" />
    -->
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
    <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" preserveOriginal="1" />
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
    <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" preserveOriginal="1" />
      </analyzer>
    </fieldType>
        <!--
  <fieldType name="string_nws" class="solr.StrField" positionIncrementGap="100">
      <analyzer type="index">
<tokenizer class="solr.PatternTokenizerFactory" pattern=". /()-" />
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
    
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
    <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" preserveOriginal="1" />
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>

    <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" preserveOriginal="1" />
      </analyzer>
    </fieldType>

    -->

    <fieldType name="text" class="solr.TextField" sortMissingLast="true" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>

        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" preserveOriginal="1" />
        <filter class="solr.LowerCaseFilterFactory"/>
    <filter class="solr.EnglishPorterFilterFactory"/>

        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>

        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" preserveOriginal="1" />
        <filter class="solr.LowerCaseFilterFactory"/>
    <filter class="solr.EnglishPorterFilterFactory"/>

        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>
<!--
    <fieldType name="text_fr" class="solr.TextField" positionIncrementGap="100">
    <analyzer type="query">
      <tokenizer class="Solr.StandardTokenizerFactory"/>
      <filter class="Solr.ISOLatin1AccentFilterFactory"/>
      <filter class="Solr.StandardFilterFactory"/>
      <filter class="Solr.LowerCaseFilterFactory"/>
      <filter class="Solr.StopFilterFactory" words="french-stopwords.txt" ignoreCase="true"/>
      <filter class="Solr.SnowballPorterFilterFactory" language="French"/>  TODO
      <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>

     </analyzer>

    </fieldType>
-->

    <fieldType name="alphaOnlySort" class="solr.TextField" sortMissingLast="true" omitNorms="true">
      <analyzer>
        <!-- KeywordTokenizer does no actual tokenizing, so the entire
             input string is preserved as a single token
          -->
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <!-- The LowerCase TokenFilter does what you expect, which can be
             when you want your sorting to be case insensitive
          -->
        <filter class="solr.LowerCaseFilterFactory" />
        <!-- The TrimFilter removes any leading or trailing whitespace -->
        <filter class="solr.TrimFilterFactory" />
        <!-- The PatternReplaceFilter gives you the flexibility to use
             Java Regular expression to replace any sequence of characters
             matching a pattern with an arbitrary replacement string, 
             which may include back references to portions of the original
             string matched by the pattern.
             
             See the Java Regular Expression documentation for more
             information on pattern and replacement string syntax.
             
             http://java.sun.com/j2se/1.5.0/docs/api/java/util/regex/package-summary.html
          -->
        <filter class="solr.PatternReplaceFilterFactory"
                pattern="([^a-z])" replacement="" replace="all"
        />
      </analyzer>
    </fieldType>

    <fieldType name="textTight" class="solr.TextField" positionIncrementGap="100" >
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="false"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="0" catenateWords="1" catenateNumbers="1" catenateAll="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.EnglishPorterFilterFactory" protected="protwords.txt"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>
 </types>

 <fields>
   <field name="alphaNameSort" type="alphaOnlySort" indexed="true" stored="false"/>

   <!--MLGB Start-->
   <field name="id" type="string" indexed="true" stored="true" required="true" /> 
   <field name="pr" type="string" indexed="true" stored="true"/>
   <field name="ct" type="string" indexed="true" stored="true"/>
   <field name="ins" type="string" indexed="true" stored="true"/>
   <field name="ml1" type="string" indexed="true" stored="true"/>
   <field name="ml2" type="string" indexed="true" stored="true"/>
   <field name="sm1" type="string" indexed="true" stored="true"/>
   <field name="sm2" type="string" indexed="true" stored="true"/>
   <field name="ev" type="string" indexed="true" stored="true"/>
   <field name="evn" type="string" indexed="true" stored="true"/>
   <field name="soc" type="string" indexed="true" stored="true"/>
   <field name="dt" type="string" indexed="true" stored="true"/>
   <field name="pm" type="string" indexed="true" stored="true"/>
   <field name="mc" type="string" indexed="true" stored="true"/>
   <field name="uk" type="string" indexed="true" stored="true"/>

   <field name="printed_book" type="string" indexed="true" stored="true"/>

   <field name="nt" type="text" indexed="true" stored="true"/>
   <field name="own" type="text" indexed="true" stored="true"/>

   <field name="contents" type="text" indexed="true" stored="true" multiValued="true" />
   <field name="content_urls" type="string" indexed="false" stored="true" multiValued="true" />

   <field name="ml1_initial" type="string" indexed="true" stored="true"/>
   <field name="ml2_initial" type="string" indexed="true" stored="true"/>
   <field name="pr_initial" type="string" indexed="true" stored="true"/>

   <field name="pr_full" type="string" indexed="true" stored="true"/>
   <field name="ml_full" type="string" indexed="true" stored="true"/>

   <field name="imageurl" type="string" indexed="false" stored="true" multiValued="true" />
   <field name="imagetitle" type="string" indexed="false" stored="true" multiValued="true" />
   <field name="imagecaption" type="string" indexed="false" stored="true" multiValued="true" />

   <field name="evdesc" type="text" indexed="true" stored="true"/>
   <!-- MLGB End -->

   <!-- catch all text, containing all searchable fields (implemented
        via copyField further on in this schema  -->
   <field name="text" type="text" indexed="true" stored="false" multiValued="true"/>

   <field name="library" type="text" indexed="true" stored="false" multiValued="true"/>
   <field name="shelfmarks" type="text" indexed="true" stored="false" multiValued="true"/>
   <field name="provenance" type="text" indexed="true" stored="false" multiValued="true"/>
   <field name="authortitle" type="text" indexed="true" stored="false" multiValued="false"/>
   <field name="location" type="text" indexed="true" stored="false" multiValued="false"/>
   <field name="institute" type="text" indexed="true" stored="false" multiValued="false"/>

   <field name="sws" type="string_ws" indexed="true" stored="false" multiValued="true"/>

   <field name="shelfmarksort" type="string" indexed="true" stored="false" multiValued="false"/>

   <field name="ml1sort" type="alphaOnlySort" indexed="true" stored="false"/>
   <field name="ml2sort" type="alphaOnlySort" indexed="true" stored="false"/>
   <field name="prsort" type="alphaOnlySort" indexed="true" stored="false"/>
   <field name="ctsort" type="alphaOnlySort" indexed="true" stored="false"/>
   <field name="inssort" type="alphaOnlySort" indexed="true" stored="false"/>

   <!-- Here, default is used to create a "timestamp" field indicating
        When each document was indexed.
     -->
   <field name="timestamp" type="date" indexed="true" stored="true" default="NOW" multiValued="false"/>

   <dynamicField name="*_s"  type="string"  indexed="true"  stored="true"/>
   <dynamicField name="*_t"  type="text"    indexed="true"  stored="true"/>
   <dynamicField name="*_dt" type="date"    indexed="true"  stored="true"/>
 </fields>

 <uniqueKey>id</uniqueKey>

 <defaultSearchField>text</defaultSearchField>

 <solrQueryParser defaultOperator="AND"/>

 <copyField source="pr" dest="text"/>
 <copyField source="ct" dest="text"/>
 <copyField source="ins" dest="text"/>
 <copyField source="ml1" dest="text"/>
 <copyField source="ml2" dest="text"/>
 <copyField source="sm1" dest="text"/>
 <copyField source="sm2" dest="text"/>
 <copyField source="soc" dest="text"/>
 <copyField source="dt" dest="text"/>
 <copyField source="mc" dest="text"/>
 <copyField source="nt" dest="text"/>
 <copyField source="evn" dest="text"/>
 <copyField source="contents" dest="text"/>
 <copyField source="own" dest="text"/>

 <copyField source="ml1" dest="library"/>
 <copyField source="ml2" dest="library"/>

 <copyField source="pr" dest="provenance"/>
 <copyField source="ct" dest="provenance"/>
 <copyField source="ins" dest="provenance"/>

 <copyField source="soc" dest="authortitle"/>

 <copyField source="dt" dest="sws"/><!--why is it being copied to a field called 'string whitespace'?-->

 <copyField source="ml1" dest="location"/>

 <copyField source="ml2" dest="institute"/>

 <copyField source="sm1" dest="shelfmarks"/>
 <copyField source="sm2" dest="shelfmarks"/>

 <!-- fields to sort results without taking account of case or leading/trailing whitespace -->
 <copyField source="ml1" dest="ml1sort"   />
 <copyField source="ml2" dest="ml2sort"   />
 <copyField source="pr"  dest="prsort"    />
 <copyField source="ct"  dest="ctsort"    />
 <copyField source="ins" dest="inssort"   />

</schema>
